name: Unit Tests

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - "*"

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-tests:
    name: unit tests with default python version on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: prefix-dev/setup-pixi@v0.8.14
        with:
          pixi-version: v0.49.0
          environments: default
          activate-environment: true
      - name: Run test suite
        run: pytest -co || (if [ $? -eq 5 ]; then exit 0; else pytest --cov=src --cov-branch --cov-report=xml; fi)
      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v5
        if: env.CODECOV_TOKEN != ''
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          token: ${{ env.CODECOV_TOKEN }}
          flags: ${{ matrix.os }}-default
  # unit-tests-python-version:
  #   name: unit tests with ${{ matrix.py }} on ${{ matrix.os }}
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       py:
  #         - "3.11"
  #         - "3.12"
  #         - "3.13"
  #       os:
  #         - ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #     - uses: prefix-dev/setup-pixi@v0.8.14
  #       with:
  #         pixi-version: v0.49.0
  #         cache: true
  #         environments: default
  #         activate-environment: true
  #     - name: Run test suite
  #       run: pixi exec --spec python=${{ matrix.py }} pytest -co || (if [ $? -eq 5 ]; then exit 0; else pytest --cov=src --cov-branch --cov-report=xml; fi)
  #     - name: Upload coverage reports to Codecov with GitHub Action
  #       uses: codecov/codecov-action@v5
  #       if: env.CODECOV_TOKEN != ''
  #       env:
  #         CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  #       with:
  #         token: ${{ env.CODECOV_TOKEN }}
  #         flags: ${{ matrix.os }}-py${{ matrix.py }}
